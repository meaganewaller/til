doctype html
html
  head
    meta charset="utf-8"
    meta name="viewport" content="width=device-width,initial-scale=1.0"
    link rel="stylesheet" href="/assets/css/style.css" media="screen"
    title All TILs
  body
    .til
      .content
        .topbar
          .buttons
            span
            span
            span
        h1 ðŸ’¡ TIL: Ruby on Rack
        .learnings
          ul#learnings.learnings-inner
            - tils.each do |til|
              li= til[:content]
        #output
          p Thanks for sharing what you learned!
        form#til-form action="/til" method="POST"
          label for="content"  Today I learned...
          textarea.til-content#content name="content" placeholder="Wanna share what you learned?"
          br
          .button-container
            button.btn#til Share TIL
            a.share(href="/") Back to home
  javascript:
    const form = document.getElementById('til-form');
    form.addEventListener('submit', (event) => {
      event.preventDefault();

      const content = document.getElementById('content').value;
      const xhr = new XMLHttpRequest();

      xhr.open('POST', '/til', true);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      xhr.send(`content=${content}`);
    })

    const socket = new WebSocket("ws://#{ENV['BASE_URL']}/til");

    socket.addEventListener('message', (event) => {
      const message = JSON.parse(event.data);

      if (message.type == 'til_created') {
        document.getElementById('output').style.display = 'block';
        const list = document.getElementById('learnings');
        list.insertAdjacentHTML("afterbegin", `<li>${message.content}</li>`);
        document.getElementById('til-form').reset();
      };
    });

    socket.onopen = (event) => {
      console.log('WebSocket connection opened:', event);

      document.getElementById('til').addEventListener('click', () => {
        const message = document.getElementById('content').value;
        socket.send(message);
      });
    };

    socket.onclose = (event) => {
      console.log('WebSocket connection closed:', event);
    };
